

	reset,checkout,revert有何区别？分别用于什么场景

	git reset 版本退回 语法： git reset --hard HEAD^ 退回到最新一次提交的前一个版本，如果想撤销退回 使用 git reset --hard ebfac20(commit id) 
	git reset 文本撤回。当更新文本时发现文本中有一处错误，然后又通过 git add 添加到暂存区，，这是就可以通过 git reset HEAD xxx 将暂存区此文本从暂存区移除。此方法适用于文件在暂存区还没有进行合并时使用
	git checkout 撤回： 语法 git checkout -- xxxx, 把文件在工作区的修改全部撤销。这里有两种情况
	第一种：文件自修改后还没有被放到暂存区，现在，撤销修改就回到和版本库一模一样的状态，
	第二种：文件已经添加到暂存区后，又做了修改，现在使用git checkout 撤销就回到添加暂存区后的状态。
	总之，就是让文件回到最近一次 git commit 或 git add 时的状态
当工作区文件误删除时，版本库里面有该文件， 可以通过 git checkout -- xxxx 恢复文件

	
888386c77c957dc52f3113f2483663e3132559d4

12628f463f4c722695bf0e9d603c9411287885db
		



		





		



		




		



	
		reset:	它有两个功能，
			第一个是，将文件从暂存区退回到工作区	
			第二个是，版本退回
		它有三个参数分别是 soft，mixed，hard
			--soft 参数将上一次的修改放入 staging area
			--mixed 参数将上一次的修改放入 working directory
			--hard 参数直接将上一次的修改抛弃
		
	checkout: 抛弃某一次修改，使用上次提交的版本
	revert: 这个还不知道